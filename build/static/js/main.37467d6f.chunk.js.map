{"version":3,"sources":["Blog.js","Info.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["Blog","className","style","paddingBottom","React","Component","Info","target","href","download","Home","textAlign","paddingLeft","App","props","state","index","ind","this","setState","onClick","changeMenu","display","alignItems","flexDirection","marginRight","src","width","height","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mNAaeA,G,4KARP,OACI,yBAAKC,UAAU,gBACX,wBAAIC,MAAO,CAACC,cAAc,SAA1B,gC,GAJGC,IAAMC,YCgFVC,E,uKA9EP,OACI,yBAAKL,UAAU,gBACX,yDACA,yBAAKA,UAAU,YACX,4BAAI,wBAAIM,OAAO,SAASC,KAAK,wBAAzB,cACJ,ueAQJ,yBAAKP,UAAU,YACX,4BAAI,wBAAIM,OAAO,SAASC,KAAK,0BAAzB,gBACJ,wLAGI,uBAAGA,KAAK,yDAAyDD,OAAO,UAAxE,oBAHJ,0TAUJ,yBAAKN,UAAU,YACX,4BAAI,wBAAIM,OAAO,SAASC,KAAK,0BAAzB,gBACJ,0eAQJ,yBAAKP,UAAU,YACX,4BAAI,wBAAIM,OAAO,SAASC,KAAK,oBAAzB,UACJ,mbAOJ,yBAAKP,UAAU,YACX,4BAAI,wBAAIM,OAAO,SAASC,KAAK,2BAAzB,gBACJ,yNAGI,uBAAGD,OAAO,SAASC,KAAK,yCAAxB,qBAHJ,6GASJ,6BACI,0DAGA,4BACI,4BACI,uBAAGA,KAAK,UAAUC,UAAQ,GAA1B,kCAGJ,4BACI,uBAAGD,KAAK,WAAWC,UAAQ,GAA3B,kCAEJ,4BACI,uBAAGD,KAAK,WAAWC,UAAQ,GAA3B,6C,GAtETL,IAAMC,WCqDVK,E,uKAnDP,OACI,yBAAKT,UAAU,gBACX,yBAAKA,UAAU,QACX,wBAAIC,MAAO,CAACS,UAAU,WAAtB,sCACA,2xDAQJ,yBAAKV,UAAU,QACX,wBAAIC,MAAO,CAACS,UAAU,WAAtB,sBACA,wBAAIT,MAAO,CAACU,YAAY,SACpB,4BACI,2EACA,6nBAKJ,4BACI,8CACA,6QAKJ,4BACI,gDACA,sXAEJ,4BACI,iGACA,6aAIJ,4BACI,gGACA,kR,GA3CTR,IAAMC,WC0DVQ,E,kDAtDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,MAAQ,GAHE,E,uDAOPC,GAEJC,KAAKH,MAAMC,QAAUC,GAAIC,KAAKC,SAAS,CACtCH,MAAQC,M,+BAIP,IAAD,OACJ,OAGI,yBAAKhB,UAAU,OACX,yBAAKA,UAAU,cACX,iEAGJ,yBAAKA,UAAU,QACX,yBAAKmB,QAAS,kBAAI,EAAKC,WAAW,IAAIpB,UAAU,YAAW,qCAC3D,yBAAKmB,QAAS,kBAAI,EAAKC,WAAW,IAAIpB,UAAU,YAAW,oCAC3D,yBAAKmB,QAAS,kBAAI,EAAKC,WAAW,IAAIpB,UAAU,YAAW,uCAGzC,IAArBiB,KAAKH,MAAMC,MAAY,kBAAC,EAAD,MAA6B,IAArBE,KAAKH,MAAMC,MAAY,kBAAC,EAAD,MAAQ,kBAAC,EAAD,MAE/D,yBAAKf,UAAU,UAEX,yBAAKC,MAAO,CAACoB,QAAQ,OAAOC,WAAW,SAASC,cAAc,WAC1D,uCACA,yBAAKtB,MAAO,CAACoB,QAAS,gBAClB,uBAAIpB,MAAO,CAACuB,YAAY,SAAUjB,KAAK,4CACnCD,OAAO,UACP,yBAAKmB,IAAI,oBAAoBC,MAAM,OAAOC,OAAO,UAErD,uBAAGpB,KAAK,mDACJD,OAAO,UACP,yBAAKmB,IAAI,mBAAmBC,MAAM,OAAOC,OAAO,kB,GA5C9DxB,IAAMC,WCOJwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.37467d6f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Blog extends React.Component {\n    render(){\n        return (\n            <div className='simple-block'>\n                <h2 style={{paddingBottom:'100%'}}>Blogs are coming soon..</h2>\n            </div>\n        );\n    }\n}\n\nexport default Blog;\n","import React from 'react';\nimport './App.css'\n\nclass Info extends React.Component {\n    render(){\n        return (\n            <div className='simple-block'>\n                <h1>Best websites to start CP</h1> \n                <div className='websites'>\n                    <h3><az target=\"_blank\" href=\"https://codechef.com\">Codechef </az></h3>\n                    <p >Codechef is one of the best place to start as a beginner because \n                        codechef has this unique kind of contest (Long challenge) which goes on for 10 days.\n                        This is quite helpful for beginners as they are able to learn new things \n                        during the contest.Other than long challenge there are two other types of contests on\n                        Codechef , namely Lunchtime and Coof-off. Both of these are short contests are of 3 and 2.5 hours.\n                        Each of the 3 contests take place once a month.\n                    </p>\n                </div>\n                <div className='websites'>\n                    <h3><az target=\"_blank\" href=\"https://hackerrank.com\">Hackerrank </az></h3>\n                    <p >\n                        Hackerrank is another good beginner friendly place to start competetive programming.\n                        It has a variety of tutorials on various programming languages and on  \n                        <a href='https://www.hackerrank.com/challenges/problem-solving/' target='_blank' > Problem Solving</a>.\n                        You can start right away in any tutorial , read it and then find solutions to the questions on that\n                        particular topic and submit. But the problem with Hackerrank is that it is not centered on competetive \n                        programming and thus has does not have a wide variety of problems.\n                        Also contests are rare on Hackerrank.\n                    </p>\n                </div>\n                <div className='websites'>\n                    <h3><az target=\"_blank\" href=\"https://codeforces.com\">Codeforces </az></h3>\n                    <p >\n                        Codeforces is the best website once you are not total beginner in CP .Codeforces generally has contests every \n                        alternate days (on average), which are short contests of 2 or 2.5 hours.The best thing about Codeforces \n                        is its community.The Codeforces community is very strong , they post fast editorials after every contest\n                        and help out people who are stuck at a particular problem.\n                        Many top programmers around the world participate mostly in Codeforces contests.\n                    </p>\n                </div>\n                <div className='websites'>\n                    <h3><az target=\"_blank\" href=\"https://spoj.com\">SPOJ </az></h3>\n                    <p >\n                        SPOJ (Sphere Online Judge) is what you can call the library of competetive programming questions.It contains \n                        problems from previous contests of various websites and also has the problems from Google Kickstart and\n                        ACM-ICPC to local olympiads.SPOJ has literally thousands of problems on a wide range of topics.\n                        But the problem with SPOJ is that they dont post any editorials nor have any type of contests.\n                    </p>\n                </div>\n                <div className='websites'>\n                    <h3><az target=\"_blank\" href=\"https://hackerearth.com\">HackerEarth</az></h3>\n                    <p >\n                        HackerEarth hosts regular contests as well as has various hackathons organised by various companies.\n                        I haven't used HackerEarth much so I dont have much info but they have one of the best \n                        <a target=\"_blank\" href='https://www.hackerearth.com/practice/'> practice series </a>\n                        wherein there are step by step tutorials and guides to basic algorithms and then problems based on them.\n                    </p>\n                </div>\n\n                \n                <div  >\n                    <h2  >\n                        Download recommended books \n                    </h2> \n                    <ul>\n                        <li >\n                            <a href='DSA.pdf' download>\n                                DS Algo by Narsimha Karamachi</a>\n                        </li>\n                        <li >\n                            <a href='CTCI.pdf' download>Cracking the Coding Interview</a>\n                        </li>\n                        <li >\n                            <a href='EOPI.pdf' download>Elements of Programming Interview</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n        \n    }\n}\n\nexport default Info;\n","import React from 'react';\nimport './App.css';\n\nclass Home extends React.Component {\n    render(){\n        return (\n            <div className='simple-block'>\n                <div className='blog' >\n                    <h3 style={{textAlign:'center'}}>What is Competetive Programming ? </h3>\n                    <p>The aim of competitive programming is to write source code of computer programs which are able to solve given problems. A vast majority of problems appearing in programming contests are mathematical or logical in nature. Typical such tasks belong to one of the following categories: combinatorics, number theory, graph theory, geometry, string analysis and data structures. Problems related to artificial intelligence are also popular in certain competitions.\n\nIrrespective of the problem category, the process of solving a problem can be divided into two broad steps: constructing an efficient algorithm, and implementing the algorithm in a suitable programming language (the set of programming languages allowed varies from contest to contest). These are the two most commonly tested skills in programming competitions.\n\nIn most contests, the judging is done automatically by host machines, commonly known as judges. Every solution submitted by a contestant is run on the judge against a set of (usually secret) test cases. Normally, contest problems have an all-or-none marking system, meaning that a solution is \"Accepted\" only if it produces satisfactory results on all test cases run by the judge, and rejected otherwise. However, some contest problems may allow for partial scoring, depending on the number of test cases passed, the quality of the results, or some other specified criteria. Some other contests only require that the contestant submit the output corresponding to given input data, in which case the judge only has to analyze the submitted output data.\n\nOnline judges are online environments in which testing takes place. Online judges have ranklists showing users with the biggest number of accepted solutions and/or shortest execution time for a particular problem. </p>\n                </div>\n                <div className='blog'>\n                    <h3 style={{textAlign:'center'}}>Why to start CP ? </h3>\n                    <ul style={{paddingLeft:'10px'}}>\n                        <li>\n                            <h4>Improves understanding of DS and Algorithms</h4>\n                            <p>\n\n                                You may have implemented a lot of data structures and algorithms in college or classes, but you have always worked with small constraints. But when the data becomes large, we need to use various other (more efficient ) algorithms to limit the CPU time and the memory used. E.g., if you want to find the Fibonacci number for n = 100, it takes more than 56000 years to compute it using the standard recursive algorithm, however by using simple dynamic programming you can prevent the exponential useless calls to the function by storing previous results which will give you the answer in a few microseconds.\n                            </p>\n                        </li>\n                        <li>\n                            <h4>Improves logic</h4>\n                            <p>Your logic improves by practice. You weren't this smart to being with. \n                                With CP, you continuously train yourself with algorithmic problems that \n                                test the better out of your current logic skills. With more and more practice, you get better.\n                            </p>\n                        </li>\n                        <li>\n                            <h4>Speeds coding up</h4>\n                            <p>With an improved logic, you will be able to solve problems faster, decide faster, and put it into code faster without going to and fro thinking about the best approach to code it. Bonus benefit - There are many 2-3 hrs contest for Competitive Programming, so if you are in the habit of giving those, you must have increased your typing speed.</p>\n                        </li>\n                        <li>\n                            <h4>You will start writing the best possible code in every situation </h4>\n                            <p>C, C++, and Java are all compiled languages. That is, they interact directly with the system, and by extension, give you 100% control (figuratively) of how your code runs.\nIf you are doing CP in these languages (which you should), you will regularly run into situations where your code hangs short by a few milliseconds or takes a little too much memory. Micro-optimizations play a huge part then.</p>\n                        </li>\n\n                        <li>\n                            <h4>And last but not least, CP helps you crack hiring coding rounds </h4>\n                            <p>Coding rounds have always used Competitive Programming as a test of the candidate's potential. I don't 100% agree with it, but you can't do anything about it. So practicing CP here will always increase your chances of getting selected.</p>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React from 'react';\nimport './App.css';\nimport Blog from './Blog.js'\nimport Info from './Info.js'\nimport Home from './Home.js'\nclass App extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            index : 1,\n        }\n    }\n\n    changeMenu(ind){\n\n        if(this.state.index !== ind)this.setState({\n            index : ind,\n        })\n    }\n\n    render(){\n        return (\n            \n\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <h3>Competitive Programming Club PVG</h3>\n                </div>\n\n                <div className='menu'>\n                    <div onClick={()=>this.changeMenu(0)} className='noicehvr'><p>Blogs</p></div>\n                    <div onClick={()=>this.changeMenu(1)} className='noicehvr'><p>Home</p></div>\n                    <div onClick={()=>this.changeMenu(2)} className='noicehvr'><p>Guides</p></div>\n                </div>\n\n                {this.state.index === 1?<Home/>:this.state.index === 0?<Blog/>:<Info/>}\n                \n                <div className='footer'>\n\n                    <div style={{display:'flex',alignItems:'center',flexDirection:'column'}}>\n                        <h3>Socials</h3>\n                        <div style={{display: 'inlineBlock'}}>\n                            <a  style={{marginRight:'100px'}} href='https://github.com/gaurav1620/cp-club-pvg' \n                                target='_blank'>\n                                <img src='github-11-xxl.png' width='50px' height='50px'/>\n                            </a>\n                            <a href='https://chat.whatsapp.com/BhMFqfAfRuLEGN90q3BQCD' \n                                target='_blank'>\n                                <img src='whatsapp-xxl.png' width='50px' height='50px'/>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n        \n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}